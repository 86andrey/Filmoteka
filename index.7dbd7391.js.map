{"mappings":"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","sources":["src/js/movieFetch.js","src/js/renderFunctions.js","src/js/storage.js"],"sourcesContent":["const API_KEY = '03779c52c93ea63ebe46db37a334d7d8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n  export default class MovieApiService {\n    constructor() {\n      this.searchQuery = '';\n      this.page = 1;\n      \n    }\n  \n    // метод получения массива популярных фильмов. Total_pages = 1000 по дефолту.\n    async fetchPopular(){\n      try{       \n      const url=`${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${this.page}`\n      const response=  await fetch(url);\n      const data = await response.json();\n      console.log(data);\n        // return data.results;\n        return data.results;\n     } catch(error){console.log(error);\n    }}\n    \n    // метод получения массива фильмов по запросу.\n     async fetchByQuery(searchQuery){\n      try{ \n      const url=`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=${this.page}&include_adult=false`\n      const response=  await fetch(url);\n      const data = await response.json();\n      \n      return data.results;\n      } catch(error){console.log(error);\n      }}\n\n    // метода получения массива жанров\n    async getGenres(){\n      try{ \n      const url=`${BASE_URL}genre/movie/list?api_key=${API_KEY}&language=en-US`\n      const response=  await fetch(url);\n      const data = await response.json();\n      console.log(data);\n      return data;\n      } catch(error){console.log(error);\n      }}\n   \n    // метод получения колличества страниц в зависимости от запроса\n    async getCountByQuery(searchQuery){\n      try{ \n      const url=`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&include_adult=false`\n      const response=  await fetch(url);\n      const data = await response.json();\n      return data.total_results;\n      } catch(error){console.log(error);\n      }}\n\n    // метод получения инфо о фильме по айдишке\n      async fetchById(movieId){\n        try{       \n        const url=`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n        const response=  await fetch(url);\n        const data = await response.json();\n        // console.log(data);\n        return data;\n       } catch(error){console.log(error);\n      }}\n\n    // метод присвоения странице номера из пагинации\n    setCurrentPage(page){\n    this.page=page;\n     }\n\n    // метод добавления по одной странице\n    incrementPage() {\n      this.page += 1;\n    }\n\n    // метод сброса нумерации страниц на первую\n    resetPage() {\n      this.page = 1;\n    }\n\n    // get query() {\n    //   return this.searchQuery;\n    // }\n  \n    // set query(newQuery) {\n    //   this.searchQuery = newQuery;\n    // }\n  }\n","import MovieApiService from './movieFetch';\nimport { storage } from './storage';\nconst movie = new MovieApiService();\n\nconst containerCard = document.querySelector('.container-card')\nconst containerModal = document.querySelector('.modal__card-content')\nconst errorMessage= document.querySelector('.header-error-container')\n\n\nexport async function renderMarkupPopular() {\n    const array = await movie.fetchPopular();\n    console.log(array);\n    containerCard.insertAdjacentHTML('beforeend', makeMarkup(array));\n}\n\nexport async function renderMarkupByQ(searchQuery) {\n    try{\n    const array = await movie.fetchByQuery(searchQuery);\n    if(array.length===0){\n        showRequestError()\n      }\n    console.log(array.length);\n    containerCard.innerHTML=await makeMarkup(array);}\n    catch(error){showRequestError()}\n    }\n    // containerCard.insertAdjacentHTML('beforeend', await makeMarkup(array));\n\n        \nfunction makeMarkup(array) {\n  return array.map(({ poster_path, id, original_title, release_date, genre_ids } ) => {\n    const newReleaseDate = release_date.split('-')[0];\n    // const genres = movie.getGenres().then(data => data);\n    \n    \n    \n      // function genresChanged(){\n      //   if (genre_ids.length === 0) {\n      //     return (genre_ids = 'Other');\n      //   }\n      //   genre_ids = newGenre_ids\n      //     .map(genreID => (genreID = genres[genreID]))\n      //     .slice(0, 2)\n      //     .join(', ');\n\n      //   return;\n      // }     \n      // console.log(array.results)\n    // const genreMain = array.results.flatMap(item => {\n    //     if(item.){}\n    //     console.log(item)\n    //   })\n      // console.log(genreMain)\n    const ganresArray = [\n          {id: 28, name: 'Action' },\n          {id: 12, name: 'Adventure'},\n          {id: 16, name: 'Animation'},\n          {id: 35, name: 'Comedy'},\n          {id: 80, name: 'Crime'},\n          {id: 99, name: 'Documentary'},\n          {id: 18, name: 'Drama'},\n          {id: 10751, name: 'Family'},\n          {id: 14, name: 'Fantasy'},\n          {id: 36, name: 'History'},\n          {id: 27, name: 'Horror'},\n          {id: 10402, name: 'Music'},\n          {id: 9648, name: 'Mystery'},\n          {id: 10749, name: 'Romance'},\n          {id: 878, name: 'Science Fiction'},\n          {id: 10770, name: 'TV Movie'},\n          {id: 53, name: 'Thriller' },\n          {id: 10752, name: 'War' },\n          {id: 37, name: 'Western' },\n    ] \n         \n      \n    const genreMain = genre_ids.reduce((acc, id) => {\n      const movieGenre = ganresArray.filter((genre) => genre.id === id)[0];\n      acc.push(movieGenre.name);\n      return acc.slice(0, 3);\n      }, [])\n    // console.log(genreMain.length);\n    if (genreMain.length === 3) {\n         genreMain.splice(2, 1, \"Other\");\n    }\n    // if (genreMain.length === 0) {\n    //    genreMain = \"No janre\";\n    // }\n   \n      \n        return `\n                  <div class=\"container-card_single-card\" data-id=\"${id}\" >\n                    <div class=\"poster\">\n                        <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${original_title}\">\n                    </div>\n                    <div class=\"info\">\n                      <h3 class=\"info_title\">${original_title}</h3>\n                      <p class=\"info_details\">\n                          ${genreMain.join(\", \")} | ${newReleaseDate}\n                      </p>\n                    </div>\n                  </div> \n        `}).join('');\n}\n\nexport async function makeMarkupLib(array) {\n  return array.map(({ poster_path, id, original_title, release_date, genres }) => {\n    const newReleaseDate = release_date.split('-')[0];\n    const allgenres = genres.flatMap(genre => genre.name).slice(0, 3)\n    console.log(allgenres)\n    allgenres.slice(0, 3)\n    if (allgenres.length === 3) {\n      allgenres.splice(2, 1, \"Other\")\n    }\n        return `\n                  <div class=\"container-card_single-card\" data-id=\"${id}\" >\n                    <div class=\"poster\">\n                        <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${original_title}\">\n                    </div>\n                    <div class=\"info\">\n                      <h3 class=\"info_title\">${original_title}</h3>\n                      <p class=\"info_details\">\n                          ${allgenres.join(\", \")} | ${newReleaseDate}\n                      </p>\n                    </div>\n                  </div> \n        `}).join('');\n}\n\nexport async function openModal(movieId) {\n    \n    const data = await movie.fetchById(movieId);\n    // console.log(array);\n    containerModal.innerHTML=await makeMarkupModal(data);\n    \n    const modalCloseBtn=document.querySelector('.modal__close');\n    const modal=document.querySelector('.modal__card-overlay');\n  modalCloseBtn.addEventListener('click', () => { modal.classList.add('is-hidden') })\n  \n  const addToWatched = document.querySelector(\".modal__btn-1add\")\n  const addToQueue = document.querySelector(\".modal__btn-2add\")\n  const removeFromWatched = document.querySelector(\".modal__btn-1remove\")\n  const removeFromQueue = document.querySelector(\".modal__btn-2remove\")\n  \n  // ФУНКЦИИ СОХРАНЕНИЯ КНОПОК\n  \n  saveQueueBtn()\n  async function saveQueueBtn() {\n    const data = await movie.fetchById(movieId)\n    const parsing = storage.readItem('qu');\n    if (parsing) {\n      const movieTitle = data.title;\n      const checkMovie = parsing.findIndex(option => option.title === movieTitle)\n      if (checkMovie >= 0) {\n        addToQueue.classList.add('hide-btn')\n        removeFromQueue.classList.remove('hide-btn')\n      } else if(parsing === [] || undefined){\n        removeFromQueue.classList.add('hide-btn')\n        addToQueue.classList.remove('hide-btn')\n      }\n    }\n  }\n  saveWatchedBtn()\n  async function saveWatchedBtn() {\n      const data = await movie.fetchById(movieId)\n    const parsing = storage.readItem('watched');\n    if (parsing) {\n    const movieTitle = data.title;\n      const checkMovie = parsing.findIndex(option => option.title === movieTitle)\n      if (checkMovie >= 0) {\n      addToWatched.classList.add('hide-btn')\n    removeFromWatched.classList.remove('hide-btn')\n      } else if(parsing === [] || undefined)  {\n      removeFromWatched.classList.add('hide-btn')\n    addToWatched.classList.remove('hide-btn')\n      }\n    }\n  }\n  // ФУНКЦИИ ДОБАВЛЕНИЯ И ПЕРЕЗАПИСИ В LOCALSTORAGE\n  \n  addToWatched.addEventListener('click', async () => {\n    const data = await movie.fetchById(movieId)\n    const result = storage.readItem(\"watched\", []);\n    const parsing = storage.readItem('qu');\n    if (parsing) {\n      const movieTitle = data.title;\n      const checkMovie = parsing.findIndex(option => option.title === movieTitle)\n      if (checkMovie >= 0) {\n      const removMovie = parsing.splice(checkMovie, 1)\n       storage.addItem(\"qu\", parsing)\n      result.push(data);\n      storage.addItem(\"watched\", result);\n      } else if (checkMovie === -1) {\n      result.push(data);\n      storage.addItem(\"watched\", result);\n      }\n    } else {\n      result.push(data);\n      storage.addItem(\"watched\", result);\n    }\n    addToWatched.classList.add('hide-btn')\n    removeFromWatched.classList.remove('hide-btn')\n     removeFromQueue.classList.add('hide-btn')\n    addToQueue.classList.remove('hide-btn')\n  })\n\n  addToQueue.addEventListener('click', async () => {\n    const data = await movie.fetchById(movieId)\n    const result = storage.readItem(\"qu\", []);\n    const parsing = storage.readItem('watched');\n    if (parsing) {\n      const movieTitle = data.title;\n      const checkMovie = parsing.findIndex(option => option.title === movieTitle)\n      if (checkMovie >= 0) {\n      const removMovie = parsing.splice(checkMovie, 1)\n       storage.addItem(\"watched\", parsing)\n      result.push(data);\n      storage.addItem(\"qu\", result);\n      } else if (checkMovie === -1) {\n      result.push(data);\n       storage.addItem(\"qu\", result);\n      }\n    } else {\n      result.push(data);\n      storage.addItem(\"qu\", result);\n    }\n    addToQueue.classList.add('hide-btn')\n    removeFromQueue.classList.remove('hide-btn')\n      removeFromWatched.classList.add('hide-btn')\n    addToWatched.classList.remove('hide-btn')\n   \n  })\n\n // ФУНКЦИИ УДАЛЕНИЯ ИЗ LOCALSTORAGE\n\n  removeFromWatched.addEventListener('click', () => {\n      const parsing = storage.readItem('watched');\n  const movieTitle = data.title\n    const checkMovie = parsing.findIndex(option => option.title === movieTitle)\n  if (checkMovie === -1) {\n    console.log(\"error\")\n  }else {\n    const removMovie = parsing.splice(checkMovie, 1)\n    storage.addItem(\"watched\", parsing);\n    } \n    removeFromWatched.classList.add('hide-btn')\n    addToWatched.classList.remove('hide-btn')\n  })\n  \n  removeFromQueue.addEventListener('click', () => {\n      const parsing = storage.readItem('qu');\n  const movieTitle = data.title\n    const checkMovie = parsing.findIndex(option => option.title === movieTitle)\n  if (checkMovie === -1) {\n    console.log(\"error\")\n  }else {\n    const removMovie = parsing.splice(checkMovie, 1)\n    storage.addItem(\"qu\", parsing);\n    } \n    removeFromQueue.classList.add('hide-btn')\n    addToQueue.classList.remove('hide-btn')\n  })\n  \n    // containerCard.insertAdjacentHTML('beforeend', await makeMarkup(array));\n}\n\n\nfunction makeMarkupModal({ poster_path, original_title, overview, popularity, genres, vote_average, vote_count }) {\n  const allgenres = genres.flatMap(genre => genre.name).slice(0, 3)\n    // console.log(allgenres)\n    allgenres.slice(0, 3)\n    return`\n    <button type=\"button\" class=\"modal__close\" data-modal-close>\n      <svg class=\"modal__close-svg\">\n        X\n      </svg>\n    </button>\n  <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${original_title}\" class=\"modal__img\" />\n  <div class=\"modal__info\">\n    <h2 class=\"modal__info-title\">${original_title}</h2>\n    <div class=\"modal__info-block\">\n      <ul class=\"modal__info discription__modal\">\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-title\">Vote / Votes</p>\n        </li>\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-title\">Popularity</p>\n        </li>\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-title\">Original Title</p>\n        </li>\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-title\">Genre</p>\n        </li>\n      </ul>\n      \n      <ul class=\"modal__info\">\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-text\">\n          <span class=\"discription__modal-text-vote\">${vote_average}</span>\n          <span class=\"discription__modal-text-slash\">/</span>\n          <span class=\"discription__modal-text-votes\">${vote_count}</span>\n          </p>\n        </li>\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-text\">${popularity.toFixed(1)}</p>\n        </li>\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-text\">${original_title}</p>\n        </li>\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-text\">${allgenres} </p>\n        </li>\n      </ul>\n    </div>\n    <div class=\"modal__info about__modal\">\n      <h4 class=\"about__modal-title\">About</h4>\n      <p class=\"about__modal-text\">${overview}</p>\n    </div>\n    <div class=\"modal__button\">\n      <button type=\"button\" class=\"modal__btn-add modal__btn-1add\">add to Watched</button>\n      <button type=\"button\" class=\"modal__btn-add modal__btn-1remove hide-btn\">remove from Watched</button>\n      <button type=\"button\" class=\"modal__btn-add modal__btn-2add\">add to queue</button>\n      <button type=\"button\" class=\"modal__btn-add modal__btn-2remove hide-btn\">remove from queue</button>\n    </div>\n  </div>`\n}\n\n\nfunction showRequestError(){\n    errorMessage.classList.remove('is-hidden')\n    setTimeout(()=>{errorMessage.classList.add('is-hidden')},2000)\n}\n","export const storage = {\n  readItem(key, defaultValue) {\n    try {\n      const result = JSON.parse(localStorage.getItem(key));\n      return result ? result : defaultValue;\n    } catch (error) {\n      return null;\n    }\n  },\n\n  addItem(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  },\n};\n"],"names":["$478a51a321aee016$export$2e2bcd8739ae039","async","url","this","page","response","fetch","data","json","console","log","results","error","searchQuery","total_results","movieId","setCurrentPage","incrementPage","resetPage","constructor","$68O3z","parcelRequire","$8b6fb1387118c153$var$movie","default","$8b6fb1387118c153$var$containerCard","document","querySelector","$8b6fb1387118c153$var$containerModal","$8b6fb1387118c153$var$errorMessage","$8b6fb1387118c153$export$28d975c6d3caed7c","array","fetchPopular","insertAdjacentHTML","$8b6fb1387118c153$var$makeMarkup","$8b6fb1387118c153$export$81267ed347c740fc","fetchByQuery","length","$8b6fb1387118c153$var$showRequestError","innerHTML","map","poster_path","id","id1","original_title","release_date","genre_ids","newReleaseDate","split","ganresArray","name","genreMain","reduce","acc","movieGenre","filter","genre","push","slice","splice","join","$8b6fb1387118c153$export$1d767824f1d8acb3","genres","allgenres","flatMap","$8b6fb1387118c153$export$a7f6cffb6b8ba11c","data1","fetchById","overview","popularity","vote_average","vote_count","toFixed","$8b6fb1387118c153$var$makeMarkupModal","modalCloseBtn","modal","addEventListener","classList","add","addToWatched","addToQueue","removeFromWatched","removeFromQueue","parsing","$5uEKZ","storage","readItem","movieTitle","title","findIndex","option","remove","saveQueueBtn","saveWatchedBtn","result","checkMovie","addItem","setTimeout","$3fff5e8daf4b13a6$export$ddcffe0146c8f882","key","defaultValue","JSON","parse","localStorage","getItem","value","setItem","stringify"],"version":3,"file":"index.7dbd7391.js.map"}