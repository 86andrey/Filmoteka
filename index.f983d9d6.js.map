{"mappings":"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","sources":["src/js/storage.js","src/js/renderFunctions.js","src/js/movieFetch.js","src/index.js"],"sourcesContent":["export const storage = {\n  readItem(key, defaultValue) {\n    try {\n      const result = JSON.parse(localStorage.getItem(key));\n      return result ? result : defaultValue;\n    } catch (error) {\n      return null;\n    }\n  },\n\n  addItem(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  },\n};\n","import MovieApiService from './movieFetch';\nimport { storage } from './storage';\nconst movie = new MovieApiService();\n\nconst containerCard = document.querySelector('.container-card')\nconst containerModal = document.querySelector('.modal__card-content')\nconst errorMessage= document.querySelector('.header-error-container')\n\n\nexport async function renderMarkupPopular() {\n    const array = await movie.fetchPopular();\n    console.log(array);\n    containerCard.insertAdjacentHTML('beforeend', makeMarkup(array));\n}\n\nexport async function renderMarkupByQ(searchQuery) {\n    try{\n    const array = await movie.fetchByQuery(searchQuery);\n    if(array.length===0){\n        showRequestError()\n      }\n    console.log(array.length);\n    containerCard.innerHTML=await makeMarkup(array);}\n    catch(error){showRequestError()}\n    }\n    // containerCard.insertAdjacentHTML('beforeend', await makeMarkup(array));\n\n        \nfunction makeMarkup(array) {\n  return array.map(({ poster_path, id, original_title, release_date, genre_ids } ) => {\n    const newReleaseDate = release_date.split('-')[0];\n    // const genres = movie.getGenres().then(data => data);\n    \n    \n    \n      // function genresChanged(){\n      //   if (genre_ids.length === 0) {\n      //     return (genre_ids = 'Other');\n      //   }\n      //   genre_ids = newGenre_ids\n      //     .map(genreID => (genreID = genres[genreID]))\n      //     .slice(0, 2)\n      //     .join(', ');\n\n      //   return;\n      // }     \n      // console.log(array.results)\n    // const genreMain = array.results.flatMap(item => {\n    //     if(item.){}\n    //     console.log(item)\n    //   })\n      // console.log(genreMain)\n    const ganresArray = [\n          {id: 28, name: 'Action' },\n          {id: 12, name: 'Adventure'},\n          {id: 16, name: 'Animation'},\n          {id: 35, name: 'Comedy'},\n          {id: 80, name: 'Crime'},\n          {id: 99, name: 'Documentary'},\n          {id: 18, name: 'Drama'},\n          {id: 10751, name: 'Family'},\n          {id: 14, name: 'Fantasy'},\n          {id: 36, name: 'History'},\n          {id: 27, name: 'Horror'},\n          {id: 10402, name: 'Music'},\n          {id: 9648, name: 'Mystery'},\n          {id: 10749, name: 'Romance'},\n          {id: 878, name: 'Science Fiction'},\n          {id: 10770, name: 'TV Movie'},\n          {id: 53, name: 'Thriller' },\n          {id: 10752, name: 'War' },\n          {id: 37, name: 'Western' },\n    ] \n         \n      \n    const genreMain = genre_ids.reduce((acc, id) => {\n      const movieGenre = ganresArray.filter((genre) => genre.id === id)[0];\n      acc.push(movieGenre.name);\n      return acc.slice(0, 3);\n      }, [])\n    // console.log(genreMain.length);\n    if (genreMain.length === 3) {\n         genreMain.splice(2, 1, \"Other\");\n    }\n    // if (genreMain.length === 0) {\n    //    genreMain = \"No janre\";\n    // }\n   \n      \n        return `\n                  <div class=\"container-card_single-card\" data-id=\"${id}\" >\n                    <div class=\"poster\">\n                        <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${original_title}\">\n                    </div>\n                    <div class=\"info\">\n                      <h3 class=\"info_title\">${original_title}</h3>\n                      <p class=\"info_details\">\n                          ${genreMain.join(\", \")} | ${newReleaseDate}\n                      </p>\n                    </div>\n                  </div> \n        `}).join('');\n}\n\n\nexport async function openModal(movieId) {\n    \n    const data = await movie.fetchById(movieId);\n    // console.log(array);\n    containerModal.innerHTML=await makeMarkupModal(data);\n    \n    const modalCloseBtn=document.querySelector('.modal__close');\n    const modal=document.querySelector('.modal__card-overlay');\n  modalCloseBtn.addEventListener('click', () => { modal.classList.add('is-hidden') })\n  \n  const addToWatched = document.querySelector(\".modal__btn-1add\")\n  const addToQueue = document.querySelector(\".modal__btn-2add\")\n  const removeFromWatched = document.querySelector(\".modal__btn-1remove\")\n  const removeFromQueue = document.querySelector(\".modal__btn-2remove\")\n  \n  // ФУНКЦИИ СОХРАНЕНИЯ КНОПОК\n  \n  saveQueueBtn()\n  async function saveQueueBtn() {\n    const data = await movie.fetchById(movieId)\n    const parsing = storage.readItem('qu');\n    if (parsing) {\n      const movieTitle = data.title;\n      const checkMovie = parsing.findIndex(option => option.title === movieTitle)\n      if (checkMovie >= 0) {\n        addToQueue.classList.add('hide-btn')\n        removeFromQueue.classList.remove('hide-btn')\n      } else if(parsing === [] || undefined){\n        removeFromQueue.classList.add('hide-btn')\n        addToQueue.classList.remove('hide-btn')\n      }\n    }\n  }\n  saveWatchedBtn()\n  async function saveWatchedBtn() {\n      const data = await movie.fetchById(movieId)\n    const parsing = storage.readItem('watched');\n    if (parsing) {\n    const movieTitle = data.title;\n      const checkMovie = parsing.findIndex(option => option.title === movieTitle)\n      if (checkMovie >= 0) {\n      addToWatched.classList.add('hide-btn')\n    removeFromWatched.classList.remove('hide-btn')\n      } else if(parsing === [] || undefined)  {\n      removeFromWatched.classList.add('hide-btn')\n    addToWatched.classList.remove('hide-btn')\n      }\n    }\n  }\n  // ФУНКЦИИ ДОБАВЛЕНИЯ И ПЕРЕЗАПИСИ В LOCALSTORAGE\n  \n  addToWatched.addEventListener('click', async () => {\n    const data = await movie.fetchById(movieId)\n    const result = storage.readItem(\"watched\", []);\n    const parsing = storage.readItem('qu');\n    if (parsing) {\n      const movieTitle = data.title;\n      const checkMovie = parsing.findIndex(option => option.title === movieTitle)\n      if (checkMovie >= 0) {\n      const removMovie = parsing.splice(checkMovie, 1)\n       storage.addItem(\"qu\", parsing)\n      result.push(data);\n      storage.addItem(\"watched\", result);\n      } else if (checkMovie === -1) {\n      result.push(data);\n      storage.addItem(\"watched\", result);\n      }\n    } else {\n      result.push(data);\n      storage.addItem(\"watched\", result);\n    }\n    addToWatched.classList.add('hide-btn')\n    removeFromWatched.classList.remove('hide-btn')\n     removeFromQueue.classList.add('hide-btn')\n    addToQueue.classList.remove('hide-btn')\n  })\n\n  addToQueue.addEventListener('click', async () => {\n    const data = await movie.fetchById(movieId)\n    const result = storage.readItem(\"qu\", []);\n    const parsing = storage.readItem('watched');\n    if (parsing) {\n      const movieTitle = data.title;\n      const checkMovie = parsing.findIndex(option => option.title === movieTitle)\n      if (checkMovie >= 0) {\n      const removMovie = parsing.splice(checkMovie, 1)\n       storage.addItem(\"watched\", parsing)\n      result.push(data);\n      storage.addItem(\"qu\", result);\n      } else if (checkMovie === -1) {\n      result.push(data);\n       storage.addItem(\"qu\", result);\n      }\n    } else {\n      result.push(data);\n      storage.addItem(\"qu\", result);\n    }\n    addToQueue.classList.add('hide-btn')\n    removeFromQueue.classList.remove('hide-btn')\n      removeFromWatched.classList.add('hide-btn')\n    addToWatched.classList.remove('hide-btn')\n   \n  })\n\n // ФУНКЦИИ УДАЛЕНИЯ ИЗ LOCALSTORAGE\n\n  removeFromWatched.addEventListener('click', () => {\n      const parsing = storage.readItem('watched');\n  const movieTitle = data.title\n    const checkMovie = parsing.findIndex(option => option.title === movieTitle)\n  if (checkMovie === -1) {\n    console.log(\"error\")\n  }else {\n    const removMovie = parsing.splice(checkMovie, 1)\n    storage.addItem(\"watched\", parsing);\n    } \n    removeFromWatched.classList.add('hide-btn')\n    addToWatched.classList.remove('hide-btn')\n  })\n  \n  removeFromQueue.addEventListener('click', () => {\n      const parsing = storage.readItem('qu');\n  const movieTitle = data.title\n    const checkMovie = parsing.findIndex(option => option.title === movieTitle)\n  if (checkMovie === -1) {\n    console.log(\"error\")\n  }else {\n    const removMovie = parsing.splice(checkMovie, 1)\n    storage.addItem(\"qu\", parsing);\n    } \n    removeFromQueue.classList.add('hide-btn')\n    addToQueue.classList.remove('hide-btn')\n  })\n  \n    // containerCard.insertAdjacentHTML('beforeend', await makeMarkup(array));\n}\n\n\nfunction makeMarkupModal({poster_path, original_title, overview, popularity, genres_name, vote_average, vote_count}){\n    return`\n    <button type=\"button\" class=\"modal__close\" data-modal-close>\n      <svg class=\"modal__close-svg\">\n        X\n      </svg>\n    </button>\n  <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"${original_title}\" class=\"modal__img\" />\n  <div class=\"modal__info\">\n    <h2 class=\"modal__info-title\">${original_title}</h2>\n    <div class=\"modal__info-block\">\n      <ul class=\"modal__info discription__modal\">\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-title\">Vote / Votes</p>\n        </li>\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-title\">Popularity</p>\n        </li>\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-title\">Original Title</p>\n        </li>\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-title\">Genre</p>\n        </li>\n      </ul>\n      \n      <ul class=\"modal__info\">\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-text\">\n          <span class=\"discription__modal-text-vote\">${vote_average}</span>\n          <span class=\"discription__modal-text-slash\">/</span>\n          <span class=\"discription__modal-text-votes\">${vote_count}</span>\n          </p>\n        </li>\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-text\">${popularity.toFixed(1)}</p>\n        </li>\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-text\">${original_title}</p>\n        </li>\n        <li class=\"discription__modal-item\">\n          <p class=\"discription__modal-text\">${genres_name} </p>\n        </li>\n      </ul>\n    </div>\n    <div class=\"modal__info about__modal\">\n      <h4 class=\"about__modal-title\">About</h4>\n      <p class=\"about__modal-text\">${overview}</p>\n    </div>\n    <div class=\"modal__button\">\n      <button type=\"button\" class=\"modal__btn-add modal__btn-1add\">add to Watched</button>\n      <button type=\"button\" class=\"modal__btn-add modal__btn-1remove hide-btn\">remove from Watched</button>\n      <button type=\"button\" class=\"modal__btn-add modal__btn-2add\">add to queue</button>\n      <button type=\"button\" class=\"modal__btn-add modal__btn-2remove hide-btn\">remove from queue</button>\n    </div>\n  </div>`\n}\n\n\nfunction showRequestError(){\n    errorMessage.classList.remove('is-hidden')\n    setTimeout(()=>{errorMessage.classList.add('is-hidden')},2000)\n}\n","const API_KEY = '03779c52c93ea63ebe46db37a334d7d8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\n  export default class MovieApiService {\n    constructor() {\n      this.searchQuery = '';\n      this.page = 1;\n      \n    }\n  \n    // метод получения массива популярных фильмов. Total_pages = 1000 по дефолту.\n    async fetchPopular(){\n      try{       \n      const url=`${BASE_URL}trending/movie/day?api_key=${API_KEY}&page=${this.page}`\n      const response=  await fetch(url);\n      const data = await response.json();\n      console.log(data);\n        // return data.results;\n        return data.results;\n     } catch(error){console.log(error);\n    }}\n    \n    // метод получения массива фильмов по запросу.\n     async fetchByQuery(searchQuery){\n      try{ \n      const url=`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=${this.page}&include_adult=false`\n      const response=  await fetch(url);\n      const data = await response.json();\n      \n      return data.results;\n      } catch(error){console.log(error);\n      }}\n\n    // метода получения массива жанров\n    async getGenres(){\n      try{ \n      const url=`${BASE_URL}genre/movie/list?api_key=${API_KEY}&language=en-US`\n      const response=  await fetch(url);\n      const data = await response.json();\n      console.log(data);\n      return data;\n      } catch(error){console.log(error);\n      }}\n   \n    // метод получения колличества страниц в зависимости от запроса\n    async getCountByQuery(searchQuery){\n      try{ \n      const url=`${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&include_adult=false`\n      const response=  await fetch(url);\n      const data = await response.json();\n      return data.total_results;\n      } catch(error){console.log(error);\n      }}\n\n    // метод получения инфо о фильме по айдишке\n      async fetchById(movieId){\n        try{       \n        const url=`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n        const response=  await fetch(url);\n        const data = await response.json();\n        // console.log(data);\n        return data;\n       } catch(error){console.log(error);\n      }}\n\n    // метод присвоения странице номера из пагинации\n    setCurrentPage(page){\n    this.page=page;\n     }\n\n    // метод добавления по одной странице\n    incrementPage() {\n      this.page += 1;\n    }\n\n    // метод сброса нумерации страниц на первую\n    resetPage() {\n      this.page = 1;\n    }\n\n    // get query() {\n    //   return this.searchQuery;\n    // }\n  \n    // set query(newQuery) {\n    //   this.searchQuery = newQuery;\n    // }\n  }\n","import MovieApiService from './js/movieFetch.js';\nimport { renderMarkupPopular, renderMarkupByQ,  openModal } from './js/renderFunctions.js';\n\n//скрипт меняет стили кнопок в хедере\n//import './js/header_styles.js';\n\n// объявляем экземпляр класса и елементы\n// const movie = new MovieApiService();\nconst form = document.querySelector('.header-input-container');\nconst input = document.querySelector('#search-box');\n\n//функция поиска по запросу\nform.addEventListener('submit', onBtnSearch);\n\nfunction onBtnSearch(evt){\n try {evt.preventDefault();\n const searchQuery= input.value\nif(searchQuery===''){console.log('надо ввести фильм');}\nrenderMarkupByQ(searchQuery);\n}\ncatch{error=>console.log(error)};\n}\n\n\n// Sergey--------------------------------------\nrenderMarkupPopular()\n\n\n// Sergey--------------------------------------\n\n\n//набросок модалки\nconst modal=document.querySelector('.modal__card-overlay');\nconst containerCard = document.querySelector('.container-card')\n\ncontainerCard.addEventListener('click', (event)=>{\n    const movieClick =event.path[2]\n    if(!movieClick.classList.contains('container-card_single-card')){\n        return}\n    modal.classList.remove('is-hidden')\n    const movieId =movieClick.dataset.id;\n    openModal(movieId);\n    });\n\n//оптимизация роботи модалки\n// (() => {\n//     const refs = {\n//     // openModalBtn: document.querySelector('[data-modal-open]'), //openBtn\n//     closeModalBtn: document.querySelector('[data-modal-close]'), //closeBtn\n//     modal: document.querySelector('[data-modal]'), //modal\n//     modalContent: document.querySelector('[data-modal-content]'), //modalContent\n//     containerCard: document.querySelector('.container-card') //карточка фильма\n//     };\n//     refs.openModalBtn.addEventListener('click', openModal);\n//     refs.closeModalBtn.addEventListener('click', closeModal);\n//     refs.modal.addEventListener('click', closeByOverlay)\n//     refs.containerCard.addEventListener('click', openModal)\n    \n//         document.addEventListener('keydown', function(e) {\n//             if (e.key === 'Escape') {\n//                 closeModal()\n//             }\n//         });\n//     // function closeByOverlay(e) {   //зарытие фоном\n//     //     if (e.target === modal) {\n//     //         modal.removeEventListener('click', closeByOverlay);\n//     //         closeModal()\n//     //     }\n//     // };\n//     function openModal() {   //открыть модалку\n//         refs.modal.classList.remove('is-hidden');\n//     }\n//     function closeModal() {   //закрить модалку\n//         refs.modal.classList.add('is-hidden')\n//     }\n// })();\n\n\n//  function modalShow(event) {\n//     //   if (event.target.className !== \"DIV\") {\n//     //     return;\n//     //   }\n//     console.log(event);\n//     //   const selectedColor = event.target.dataset.color;\n//     //   output.textContent = `Selected color: ${selectedColor}`;\n//     //   output.style.color = selectedColor;\n//     }\n"],"names":["$3fff5e8daf4b13a6$export$ddcffe0146c8f882","readItem","key","defaultValue","result","JSON","parse","localStorage","getItem","error","addItem","value","setItem","stringify","$8b6fb1387118c153$var$movie","async","url","this","page","response","fetch","data","json","console","log","results","searchQuery","total_results","movieId","setCurrentPage","incrementPage","resetPage","constructor","$8b6fb1387118c153$var$containerCard","document","querySelector","$8b6fb1387118c153$var$containerModal","$8b6fb1387118c153$var$errorMessage","$8b6fb1387118c153$export$81267ed347c740fc","array","fetchByQuery","length","$8b6fb1387118c153$var$showRequestError","innerHTML","$8b6fb1387118c153$var$makeMarkup","map","poster_path","id","id1","original_title","release_date","genre_ids","newReleaseDate","split","ganresArray","name","genreMain","reduce","acc","movieGenre","filter","genre","push","slice","splice","join","$8b6fb1387118c153$export$a7f6cffb6b8ba11c","data1","fetchById","overview","popularity","genres_name","vote_average","vote_count","toFixed","$8b6fb1387118c153$var$makeMarkupModal","modalCloseBtn","modal","addEventListener","classList","add","addToWatched","addToQueue","removeFromWatched","removeFromQueue","parsing","movieTitle","title","findIndex","option","remove","saveQueueBtn","saveWatchedBtn","checkMovie","setTimeout","$1f0dc3b9307be026$var$form","$1f0dc3b9307be026$var$input","evt","preventDefault","fetchPopular","insertAdjacentHTML","$1f0dc3b9307be026$var$modal","event","movieClick","path","contains","dataset"],"version":3,"file":"index.f983d9d6.js.map"}