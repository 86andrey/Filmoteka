{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,2FAiBiBC,SAASC,cAAc,gBAExCC,OAAOC,iBAAiB,SAAUC,EAAAC,EAAA,CAASC,EAAAC,YAAa,MACxCT,EAAAU,QAAQC,SAAS,WAAjC,MAEMC,EAAO,CACXC,SAAUX,SAASC,cAAc,0BACjCW,SAAUZ,SAASC,cAAc,yBAE7BY,EAAQb,SAASC,cAAc,wBAC/Ba,EAAgBd,SAASC,cAAc,mBACvCc,EAAuBf,SAASC,cAAc,0BAEpDa,EAAcX,iBAAiB,SAASa,IACtC,MAAMC,EAAaD,EAAME,KAAK,GAC9B,IAAKD,EAAWE,UAAUC,SAAS,8BACjC,OAEFP,EAAMM,UAAUE,OAAO,aACvB,MAAMC,EAAUL,EAAWM,QAAQC,IACnC,EAAAC,EAAAC,WAAUJ,MAIZK,iBACE,MAAMC,EAAU9B,EAAAU,QAAQC,SAAS,WACjC,GAAImB,EAAS,CACX,MAAMC,GAAc,EAAAC,EAAAC,gBAAe,EAAGH,GAClCC,EAAYG,cAAgB,KAG9BF,EAAAG,mBAAmBC,WAAaC,EAAAC,qBAG9BP,EAAYQ,QAAQC,OAAS,KAC/BxB,EAAcyB,gBAAkB,EAAAd,EAAAe,eAAcX,EAAYQ,UAEzB,IAA/BR,EAAYQ,QAAQC,QACtBvB,EAAqBI,UAAUsB,IAAI,oBAfzCC,GA0BAhC,EAAKC,SAASR,iBAAiB,SAASwB,UACtC,MAAMgB,EAAU7C,EAAAU,QAAQC,SAAS,WACjC,GAAIkC,EAAS,CACX,MAAMd,GAAc,EAAAC,EAAAC,gBAAe,EAAGY,GAQlCd,EAAYG,cAAgB,KAG9BF,EAAAG,mBAAmBC,WAAaC,EAAAC,qBAE9BP,EAAYQ,QAAQC,OAAS,KAE/BxB,EAAcyB,gBAAkB,EAAAd,EAAAe,eAAcX,EAAYQ,UAEzB,IAA/BR,EAAYQ,QAAQC,QACtBvB,EAAqBI,UAAUsB,IAAI,mBA0CnC/B,EAAKC,SAASQ,UAAUC,SAAS,yBACnCV,EAAKC,SAASQ,UAAUE,OAAO,uBAC/BX,EAAKC,SAASQ,UAAUsB,IAAI,oBAC5B/B,EAAKE,SAASO,UAAUE,OAAO,oBAC/BX,EAAKE,SAASO,UAAUsB,IAAI,2BAvChC/B,EAAKE,SAAST,iBAAiB,SAASwB,UACtC,MAAMiB,EAAU9C,EAAAU,QAAQC,SAAS,MACjC,GAAImC,EAAS,CACX,MAAMC,EAAe7C,SAASC,cAAc,6BAEtC4B,GAAc,EAAAC,EAAAC,gBAAe,EAAGa,GAEtCC,EAAaN,UAAY,GACzBzB,EAAcyB,UAAY,GAOtBV,EAAYG,cAAgB,KAI9BF,EAAAG,mBAAmBC,WAAaC,EAAAW,mBAG9BjB,EAAYQ,QAAQC,OAAS,KAE/BxB,EAAcyB,gBAAkB,EAAAd,EAAAe,eAAcX,EAAYQ,UAEzB,IAA/BR,EAAYQ,QAAQC,QACtBvB,EAAqBI,UAAUsB,IAAI,mBAmBnC/B,EAAKE,SAASO,UAAUC,SAAS,yBACnCV,EAAKE,SAASO,UAAUE,OAAO,uBAC/BX,EAAKE,SAASO,UAAUsB,IAAI,oBAC5B/B,EAAKC,SAASQ,UAAUE,OAAO,oBAC/BX,EAAKC,SAASQ,UAAUsB,IAAI,2BAsCjB,IAAIM","sources":["src/js/library.js"],"sourcesContent":["import { storage } from './storage';\nimport { trackScroll } from './btm-to-top';\nimport throttle from 'lodash.throttle';\n\nimport { makeMarkupLib } from './renderFunctions';\nimport { openModal } from './renderFunctions';\n// import './btm-to-top';\nimport {\n  createPagination,\n  paginationSettings,\n  addPageToArray,\n} from './pagination';\nimport { WATCHED_SEARCH_TYPE, QUEUE_SEARCH_TYPE } from './searchTypes';\n\n// import { onBackdropClick, toogleSliderHandler, onEscKeyPress } from './modalFooter';\nimport '../js/modalFooter';\n// import Swiper from './modalFooter';\nconst goTopBtn = document.querySelector('.back_to_top');\n// console.log(goTopBtn);\nwindow.addEventListener('scroll', throttle(trackScroll, 500));\nconst parsing = storage.readItem('watched');\n// console.log(parsing);\nconst refs = {\n  watchBtn: document.querySelector('#header-watched-button'),\n  queueBtn: document.querySelector('#header-queue-button'),\n};\nconst modal = document.querySelector('.modal__card-overlay');\nconst containerCard = document.querySelector('.container-card');\nconst containerPlaceholder = document.querySelector('.container-placeholder');\n\ncontainerCard.addEventListener('click', event => {\n  const movieClick = event.path[2];\n  if (!movieClick.classList.contains('container-card_single-card')) {\n    return;\n  }\n  modal.classList.remove('is-hidden');\n  const movieId = movieClick.dataset.id;\n  openModal(movieId);\n});\n\nrenderWatched();\nasync function renderWatched() {\n  const parsing = storage.readItem('watched');\n  if (parsing) {\n    const parsingPage = addPageToArray(1, parsing);\n    if (parsingPage.total_results > 20) {\n      // console.log(createPagination(parsingPage));\n\n      paginationSettings.searchType = WATCHED_SEARCH_TYPE;\n    }\n\n    if (parsingPage.results.length < 21) {\n      containerCard.innerHTML = await makeMarkupLib(parsingPage.results);\n    }\n    if (parsingPage.results.length !== 0) {\n      containerPlaceholder.classList.add('visually-hidden');\n    }\n  }\n  // const parsingPage = addPageToArray(1, parsing);\n  // console.log(parsingPage.results.length);\n  // if (parsingPage.results.length === 0) {\n  //   // console.log('Нет данных');\n  //   containerPlaceholder.classList.remove('visually-hidden');\n  // }\n}\n\nrefs.watchBtn.addEventListener('click', async () => {\n  const parsing = storage.readItem('watched');\n  if (parsing) {\n    const parsingPage = addPageToArray(1, parsing);\n\n    // console.log(parsingPage.results);\n    // if (parsing.length === 0) {\n    //   // console.log('Нет данных watchbtn');\n    //   containerCard.innerHTML = '';\n    //   containerPlaceholder.classList.remove('visually-hidden');\n    // }\n    if (parsingPage.total_results > 20) {\n      // console.log(createPagination(parsingPage));\n\n      paginationSettings.searchType = WATCHED_SEARCH_TYPE;\n    }\n    if (parsingPage.results.length < 21) {\n      // containerCard.innerHTML = '';\n      containerCard.innerHTML = await makeMarkupLib(parsingPage.results);\n    }\n    if (parsingPage.results.length !== 0) {\n      containerPlaceholder.classList.add('visually-hidden');\n    }\n  }\n\n  onWatchBtnClick();\n});\n\nrefs.queueBtn.addEventListener('click', async () => {\n  const parsing = storage.readItem('qu');\n  if (parsing) {\n    const paginationEl = document.querySelector('#tui-pagination-container');\n    // console.log(parsing);\n    const parsingPage = addPageToArray(1, parsing);\n    // console.log(parsingPage);\n    paginationEl.innerHTML = '';\n    containerCard.innerHTML = '';\n\n    // if (parsing.length === 0) {\n    //   // console.log('Нет данных queqeeq');\n    //   containerCard.innerHTML = '';\n    //   containerPlaceholder.classList.remove('visually-hidden');\n    // }\n    if (parsingPage.total_results > 20) {\n      // console.log('Пагинация By Queue');\n      // console.log(createPagination(parsingPage));\n\n      paginationSettings.searchType = QUEUE_SEARCH_TYPE;\n    }\n\n    if (parsingPage.results.length < 21) {\n      // containerCard.innerHTML = '';\n      containerCard.innerHTML = await makeMarkupLib(parsingPage.results);\n    }\n    if (parsingPage.results.length !== 0) {\n      containerPlaceholder.classList.add('visually-hidden');\n    }\n  }\n\n  onQueueBtnClick();\n});\n\nfunction onWatchBtnClick() {\n  if (refs.watchBtn.classList.contains('is-header-nonactive')) {\n    refs.watchBtn.classList.remove('is-header-nonactive');\n    refs.watchBtn.classList.add('is-header-active');\n    refs.queueBtn.classList.remove('is-header-active');\n    refs.queueBtn.classList.add('is-header-nonactive');\n\n    // вызов функции обновления контента страницы\n  }\n}\n\nfunction onQueueBtnClick() {\n  if (refs.queueBtn.classList.contains('is-header-nonactive')) {\n    refs.queueBtn.classList.remove('is-header-nonactive');\n    refs.queueBtn.classList.add('is-header-active');\n    refs.watchBtn.classList.remove('is-header-active');\n    refs.watchBtn.classList.add('is-header-nonactive');\n\n    // вызов функции обновления контента страницы\n  }\n}\n\n// До мене\n\n// renderWatched();\n// async function renderWatched() {\n//   const parsing = storage.readItem('watched');\n//   if (parsing) {\n//     containerCard.innerHTML = await makeMarkupLib(parsing);\n//   }\n// }\n// refs.watchBtn.addEventListener('click', async () => {\n//   const parsing = storage.readItem('watched');\n//   console.log(parsing);\n//   if (parsing) {\n//     containerCard.innerHTML = '';\n//     containerCard.innerHTML = await makeMarkupLib(parsing);\n//   } else {\n//     containerCard.innerHTML = 'List is empty';\n//   }\n//   onWatchBtnClick();\n// });\n\n// refs.queueBtn.addEventListener('click', async () => {\n//   const parsing = storage.readItem('qu');\n//   if (parsing) {\n//     containerCard.innerHTML = '';\n//     containerCard.innerHTML = await makeMarkupLib(parsing);\n//   } else {\n//     containerCard.innerHTML = 'List is empty';\n//   }\n//   onQueueBtnClick();\n// });\n\nconst swiper = new Swiper();\n"],"names":["$5uEKZ","parcelRequire","document","querySelector","window","addEventListener","$parcel$interopDefault","$9OeKo","$6SyuW","trackScroll","storage","readItem","$1cafa503bc57b7a0$var$refs","watchBtn","queueBtn","$1cafa503bc57b7a0$var$modal","$1cafa503bc57b7a0$var$containerCard","$1cafa503bc57b7a0$var$containerPlaceholder","event","movieClick","path","classList","contains","remove","movieId","dataset","id","$bYdoQ","openModal","async","parsing1","parsingPage","$2nhTy","addPageToArray","total_results","paginationSettings","searchType","$i37hA","WATCHED_SEARCH_TYPE","results","length","innerHTML","makeMarkupLib","add","$1cafa503bc57b7a0$var$renderWatched","parsing2","parsing3","paginationEl","QUEUE_SEARCH_TYPE","Swiper"],"version":3,"file":"library.b06613a6.js.map"}